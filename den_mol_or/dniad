#!/usr/bin/python3

import numpy as np
import iodens
import os

normlda = np.load("DENS/LDA.npz")
refcc = np.load("REF/CCSORT.npz")
files = normlda.files
nsys = len(files)

pat_den = "DENS/"

norm = []
for i in files:
    norm.append(iodens.niad_mwfn(normlda[i] ,refcc[i]))
norm = np.array(norm)

rhonorm = sum(norm[:,0]) / nsys
grdnorm = sum(norm[:,1]) / nsys
lrnorm  = sum(norm[:,2]) / nsys

ranes = []
rmses = []
j = 0
for f in os.listdir(pat_den):
    print(f, j)
    met = np.load(pat_den + f)
    niad = []
    for i in files:
        niad.append(iodens.niad_mwfn(met[i] ,refcc[i]))
        print(i, niad[-1])
    niad = np.array(niad)
    rmses.append([f,          max(niad[:,0]) / rhonorm,          max(niad[:,1]) / grdnorm,          max(niad[:,2]) / lrnorm])
    ranes.append([f, (sum(niad[:,0]) / nsys) / rhonorm, (sum(niad[:,1]) / nsys) / grdnorm, (sum(niad[:,2]) / nsys) / lrnorm])
    j += 1

rmses.sort(key = lambda x: max([x[1], x[2], x[3]]))
ranes.sort(key = lambda x: sum([x[1], x[2], x[3]]) / 3)

#np.savez_compressed("errors_pbe0pbe0_025_c_old_tmp.npz", rmses = np.array(rmses), ranes = np.array(ranes))

print()
print("                        RMSEs")
for x in rmses:
    print("%25s  %.6f" % (x[0], max([x[1], x[2], x[3]])))

print()
print("                        RANEs")
for x in ranes:
    print("%25s  %.6f" % (x[0], sum([x[1], x[2], x[3]]) / 3))
